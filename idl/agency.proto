// Copyright 2020 Harri @ OP Techlab.
//

syntax = "proto3";

import "protocol.proto";

option go_package = "github.com/findy-network/findy-agent-api/grpc/ops";

package ops;

/*
Agency is a service for agency level functionality i.e. multi-tenant features
like data migrations, etc.
 */
service Agency {
  // PMSHook listens realtime stream of archived protocol state machines
  rpc PSMHook(DataHook) returns (stream AgencyStatus) {}

  // Onboard allocates cloud agent and wallet from Agency
  rpc Onboard(Onboarding) returns (OnboardResult) {}
}

message Onboarding {
  string email = 1;
}

message OnboardResult {
  bool ok = 1;
  message OkResult {
    string JWT = 1;
    string CADID = 2;
    string invitation_json = 3;
  }
  OkResult result = 2;
}

message AgencyStatus {
  string id = 1;
  agency.ProtocolStatus protocol_status = 2;
  string DID = 3; // Agent DID // todo we can check protobuf id later
}

message DataHook {
  string id = 1; // UUID to uniquely identify the hook
}

service DevOps {
  rpc Enter(Cmd) returns (CmdReturn) {}
}

message Cmd {
  enum Type {
    PING = 0;
    LOGGING = 1;
    COUNT = 2;
  }
  Type type = 1;
  oneof Request {
    string logging = 2;
  }
}

message CmdReturn {
  Cmd.Type type = 1;
  oneof Response {
    string ping = 2;
    string count = 3;
  }
}